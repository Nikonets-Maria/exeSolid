// –ü—Ä–∏–Ω—Ü–∏–ø—ã SOLID –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –Ω–∞–±–æ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è,
// –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–π, –≥–∏–±–∫–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –∫–æ–¥. 

// ### 1. S - Single Responsibility Principle (–ü—Ä–∏–Ω—Ü–∏–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏)

// –ö–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –ø—Ä–∏—á–∏–Ω—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Ç–æ –µ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–¥–∞—á—É.

// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
class User {
    constructor(name) {
        this.name = name;
    }

    getName() {
        return this.name;
    }
}

// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class UserRepository {
    constructor() {
        this.users = [];
    }

    addUser (user) {
        this.users.push(user);
    }

    getUsers() {
        return this.users;
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const user1 = new User('Alice');
const userRepo = new UserRepository();
userRepo.addUser (user1);
console.log(userRepo.getUsers()); // [ User { name: 'Alice' } ]

// ### 2. O - Open/Closed Principle (–ü—Ä–∏–Ω—Ü–∏–ø –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏/–∑–∞–∫—Ä—ã—Ç–æ—Å—Ç–∏)

// –ö–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, –Ω–æ –∑–∞–∫—Ä—ã—Ç—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.

```javascript
// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º—ã
class Form {
    constructor(data) {
        this.data = data;
    }

    validate() {
        throw new Error('–ú–µ—Ç–æ–¥ validate –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö');
    }
}

// –ü–æ–¥–∫–ª–∞—Å—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class RegistrationForm extends Form {
    validate() {
        // –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        return this.data.username && this.data.password;
    }
}

// –ü–æ–¥–∫–ª–∞—Å—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
class LoginForm extends Form {
    validate() {
        // –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        return this.data.email && this.data.password;
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const registrationForm = new RegistrationForm({ username: 'user', password: 'pass' });
console.log(registrationForm.validate()); // true
```

// ### 3. L - Liskov Substitution Principle (–ü—Ä–∏–Ω—Ü–∏–ø –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –õ–∏—Å–∫–æ–≤)

// –û–±—ä–µ–∫—Ç—ã –ø–æ–¥–∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–º–µ–Ω—è–µ–º—ã–º–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∂–µ–ª–∞–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã.

```javascript
// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
class Bird {
    fly() {
        console.log('–Ø –ª–µ—á—É!');
    }
}

// –ü–æ–¥–∫–ª–∞—Å—Å –¥–ª—è –ª–∞—Å—Ç–æ—á–∫–∏
class Swallow extends Bird {}

// –ü–æ–¥–∫–ª–∞—Å—Å –¥–ª—è –ø–∏–Ω–≥–≤–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –º–æ–∂–µ—Ç –ª–µ—Ç–∞—Ç—å
class Penguin extends Bird {
    fly() {
        throw new Error('–ü–∏–Ω–≥–≤–∏–Ω—ã –Ω–µ –º–æ–≥—É—Ç –ª–µ—Ç–∞—Ç—å');
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
function letBirdFly(bird) {
    bird.fly();
}

const swallow = new Swallow();
const penguin = new Penguin();

letBirdFly(swallow); // –Ø –ª–µ—á—É!
try {
    letBirdFly(penguin); // –û—à–∏–±–∫–∞
} catch (error) {
    console.log(error.message); // –ü–∏–Ω–≥–≤–∏–Ω—ã –Ω–µ –º–æ–≥—É—Ç –ª–µ—Ç–∞—Ç—å
}
```

// ### 4. I - Interface Segregation Principle (–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)

// –ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç.

```javascript
// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
class Device {
    turnOn() {}
    turnOff() {}
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å —ç–∫—Ä–∞–Ω–æ–º
class ScreenDevice extends Device {
    showDisplay() {}
}

// –ö–ª–∞—Å—Å –¥–ª—è —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞
class TV extends ScreenDevice {
    turnOn() {
        console.log('–¢–µ–ª–µ–≤–∏–∑–æ—Ä –≤–∫–ª—é—á–µ–Ω');
    }

    turnOff() {
        console.log('–¢–µ–ª–µ–≤–∏–∑–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω');
    }

    showDisplay() {
        console.log('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞');
    }
}

// –ö–ª–∞—Å—Å –¥–ª—è –ª–∞–º–ø–æ—á–∫–∏
class LightBulb extends Device {
    turnOn() {
        console.log('–õ–∞–º–ø–æ—á–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞');
    }

    turnOff() {
        console.log('–õ–∞–º–ø–æ—á–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞');
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tv = new TV();
tv.turnOn(); // –¢–µ–ª–µ–≤–∏–∑–æ—Ä –≤–∫–ª—é—á–µ–Ω
tv.showDisplay(); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞

const bulb = new LightBulb();
bulb.turnOn(); // –õ–∞–º–ø–æ—á–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞
```

// –ö–æ–Ω–µ—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø—Ä–∏–Ω—Ü–∏–ø–æ–º –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–º–µ—Ä.

// ### 5. D - Dependency Inversion Principle (–ü—Ä–∏–Ω—Ü–∏–ø –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
// class Notification {
//     send(message) {
//         throw new Error('–ú–µ—Ç–æ–¥ send –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö');
//     }
// }

// // –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ
// class EmailNotification extends Notification {
//     send(message) {
//         console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ: ${message}`);
//     }
// }

// // –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ SMS
// class SMSNotification extends Notification {
//     send(message) {
//         console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ SMS: ${message}`);
//     }
// }

// // –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
// class NotificationService {
//     constructor(notification) {
//         this.notification = notification; // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏
//     }

//     notify(message) {
//         this.notification.send(message);
//     }
// }

// // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
// const emailNotification = new EmailNotification();
// const smsNotification = new SMSNotification();

// const emailService = new NotificationService(emailNotification);
// emailService.notify('–£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!'); // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ: –£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!

// const smsService = new NotificationService(smsNotification);
// smsService.notify('–£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!'); // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ SMS: –£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!

// ### –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

// –≠—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã SOLID –≤ –¥–µ–π—Å—Ç–≤–∏–∏:

// 1. **–ü—Ä–∏–Ω—Ü–∏–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏**: –ö–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–≤–æ—é –∑–∞–¥–∞—á—É ‚Äî `User ` —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∞ `User Repository` ‚Äî –∏—Ö —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º.
// 2. **–ü—Ä–∏–Ω—Ü–∏–ø –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏/–∑–∞–∫—Ä—ã—Ç–æ—Å—Ç–∏**: –ö–ª–∞—Å—Å—ã —Ñ–æ—Ä–º –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–æ—Ä–º, –Ω–µ –∏–∑–º–µ–Ω—è—è –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å.
// 3. **–ü—Ä–∏–Ω—Ü–∏–ø –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –õ–∏—Å–∫–æ–≤**: –ü–æ–¥–∫–ª–∞—Å—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤–º–µ—Å—Ç–æ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
// 4. **–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞**: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
// 5. **–ü—Ä–∏–Ω—Ü–∏–ø –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π**: –í—ã—Å—à–∏–µ –º–æ–¥—É–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `NotificationService`) –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π (–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ `Notification`), –∞ –Ω–µ –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π.

// –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –µ—â–µ, –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å! üòä